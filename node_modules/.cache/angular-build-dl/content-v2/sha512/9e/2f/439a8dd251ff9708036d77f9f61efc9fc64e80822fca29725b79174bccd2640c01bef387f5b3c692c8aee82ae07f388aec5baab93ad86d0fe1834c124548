{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/config.service.ts","webpack:///src/app/footer/footer.component.ts","webpack:///src/app/footer/footer.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/note-content-dialog/note-content-dialog.component.ts","webpack:///src/app/note-content-dialog/note-content-dialog.component.html","webpack:///src/app/notepage/notepage.component.ts","webpack:///src/app/notepage/notepage.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","ConfigService","http","get","note","params","toString","name","body","observe","subscribe","response","console","log","priority","toFixed","date","providedIn","FooterComponent","HeaderComponent","NoteContentDialogComponent","dialogRef","data","isNewNote","noteData","key","titleFormControl","required","bodyFormControl","Date","now","NotepageComponent","configService","dialog","open","afterClosed","result","deleteNote","getAllNotes","updateNote","addNewNote","getAllNote","noteList","openDialog","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NotepageComponent } from '../app/notepage/notepage.component'\n\nconst routes: Routes = [{path: '', component: NotepageComponent},];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core'; \n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'DayNotes';\n}\n"," \n\n<app-header></app-header>\n<div class=\"content\" role=\"main\"> \n  <router-outlet></router-outlet> \n  <svg id=\"clouds\" alt=\"Gray Clouds Background\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2611.084\" height=\"485.677\" viewBox=\"0 0 2611.084 485.677\">\n    <path id=\"Path_39\" data-name=\"Path 39\" d=\"M2379.709,863.793c10-93-77-171-168-149-52-114-225-105-264,15-75,3-140,59-152,133-30,2.83-66.725,9.829-93.5,26.25-26.771-16.421-63.5-23.42-93.5-26.25-12-74-77-130-152-133-39-120-212-129-264-15-54.084-13.075-106.753,9.173-138.488,48.9-31.734-39.726-84.4-61.974-138.487-48.9-52-114-225-105-264,15a162.027,162.027,0,0,0-103.147,43.044c-30.633-45.365-87.1-72.091-145.206-58.044-52-114-225-105-264,15-75,3-140,59-152,133-53,5-127,23-130,83-2,42,35,72,70,86,49,20,106,18,157,5a165.625,165.625,0,0,0,120,0c47,94,178,113,251,33,61.112,8.015,113.854-5.72,150.492-29.764a165.62,165.62,0,0,0,110.861-3.236c47,94,178,113,251,33,31.385,4.116,60.563,2.495,86.487-3.311,25.924,5.806,55.1,7.427,86.488,3.311,73,80,204,61,251-33a165.625,165.625,0,0,0,120,0c51,13,108,15,157-5a147.188,147.188,0,0,0,33.5-18.694,147.217,147.217,0,0,0,33.5,18.694c49,20,106,18,157,5a165.625,165.625,0,0,0,120,0c47,94,178,113,251,33C2446.709,1093.793,2554.709,922.793,2379.709,863.793Z\" transform=\"translate(142.69 -634.312)\" fill=\"#90A4AE\"/>\n  </svg>\n\n</div>\n \n<app-footer></app-footer>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n \nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule} from '@angular/material/icon';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatCardModule } from '@angular/material/card'; \nimport { MatDialogModule} from '@angular/material/dialog'; \nimport { MatInputModule} from '@angular/material/input';\nimport { FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { MatMenuModule } from '@angular/material/menu';  \n\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { NotepageComponent } from './notepage/notepage.component';\nimport { NoteContentDialogComponent } from './note-content-dialog/note-content-dialog.component';\n \n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    NotepageComponent,\n    NoteContentDialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule, \n    ReactiveFormsModule,\n    MatSliderModule,MatToolbarModule,MatIconModule,MatButtonModule,MatGridListModule,MatMenuModule,\n    MatCardModule,MatDialogModule,MatInputModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Notemodel } from './notemodel';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigService {\n\n  constructor(private http: HttpClient) { }\n\n  public getAllNote(){\n    return this.http.get<Notemodel>(\"http://localhost:8080/getAllNotes\") \n  }\n\n  public updateNote(note:Notemodel){\n    return this.http.get(\"http://localhost:8080/updateNote\",{\n      params:{\n        id:note.id.toString(),\n        name:note.name,\n        body:note.body\n      },\n      observe: 'response'\n    }).subscribe(response => {\n      console.log(response);\n    })\n  }\n\n  public deleteNote(note:Notemodel){\n    return this.http.get(\"http://localhost:8080/deleteNote\",{\n      params:{\n        id:note.id.toString()        \n      },\n      observe: 'response'\n    })\n  }\n\n  \n  addNewNote(note:Notemodel) {\n    return this.http.get(\"http://localhost:8080/addNewNote\",{\n      params:{\n        name:note.name,\n        body:note.body,\n        priority :note.priority.toFixed(),\n        date:note.date     \n      },\n      observe: 'response'\n    })\n  } \n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n    <p>Copyright 1999-2021</p>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void { }\n\n}\n","<mat-toolbar color=\"primary\">\n    <button mat-icon-button class=\"example-icon\"  >\n      <mat-icon>menu</mat-icon>\n    </button>\n    <span>Notes App</span>\n    <span class=\"example-spacer\"></span> \n    <button mat-raised-button color=\"primary\">\n        <span>Resync</span>\n      <mat-icon>refresh</mat-icon> \n    </button>  \n    <button mat-raised-button color=\"primary\">Archive</button>\n  </mat-toolbar>","import { Component, Inject, Input, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { Notemodel } from '../notemodel';\n\n\n@Component({\n  selector: 'note-content-dialog',\n  templateUrl: './note-content-dialog.component.html',\n  styleUrls: ['./note-content-dialog.component.css']\n})\nexport class NoteContentDialogComponent implements OnInit {\n  isNewNote:boolean=false;\n  noteData : Notemodel ={\n    id: 0,\n    name: \"\",\n    body:\"\",\n    key:0,\n    date:\"\",\n    priority:1\n  }\n  titleFormControl = new FormControl('', [\n    Validators.required\n  ]);\n  bodyFormControl = new FormControl('', [\n    Validators.required\n  ]);\n  \n  constructor( public dialogRef: MatDialogRef<NoteContentDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: Notemodel) {  \n      if(data!=null){\n        this.isNewNote=false;\n        this.noteData = data\n      }else{\n        this.isNewNote=true;\n         this.noteData.date= Date.now().toString();\n      }  \n     }\n\n  ngOnInit(): void { }\n\n}\n","<!-- <h2 mat-dialog-title>{{data.name}}</h2> -->\n<div class=\"example-form\" >\n    <mat-form-field   class=\"example-full-width\" >\n        <input type=\"title\" matInput [formControl]=\"titleFormControl\"   [(ngModel)]=\"noteData.name\" > \n        <mat-error *ngIf=\"titleFormControl.hasError('email') && !titleFormControl.hasError('required')\">\n            Please enter a  title\n        </mat-error>\n        <mat-error *ngIf=\"titleFormControl.hasError('required')\">\n            Title is <strong>required</strong>\n        </mat-error> \n    </mat-form-field>\n\n    <mat-dialog-content class=\"mat-typography\">\n        <mat-form-field  appearance=\"fill\"  class=\"example-full-width\">\n            <textarea  rows=\"28\"   type=\"body\"  matInput [formControl]=\"bodyFormControl\"   [(ngModel)]=\"noteData.body\" >  \n            </textarea>\n            <mat-error *ngIf=\"bodyFormControl.hasError('email') && !bodyFormControl.hasError('required')\">\n                Please enter some notes\n            </mat-error>\n            <mat-error *ngIf=\"bodyFormControl.hasError('required')\">\n                Notes are <strong>required</strong>\n            </mat-error> \n        </mat-form-field>\n    </mat-dialog-content> \n\n    <mat-dialog-actions align=\"end\">\n        <button mat-button  [mat-dialog-close]=\"['']\">Cancel</button>\n        <button mat-button [mat-dialog-close]=\"['delete',noteData]\"  *ngIf=\"!isNewNote\">Delete Note</button>\n        <button mat-button [mat-dialog-close]=\"['update',noteData]\" cdkFocusInitial  *ngIf=\"!isNewNote\" >Update Note</button>\n        <button mat-button [mat-dialog-close]=\"['new',noteData]\" cdkFocusInitial *ngIf=\"isNewNote\" >Add Note</button>\n    </mat-dialog-actions>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ConfigService } from '../config.service';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\nimport { Notemodel } from '../notemodel';\nimport { MatDialog} from '@angular/material/dialog'; \nimport { NoteContentDialogComponent } from '../note-content-dialog/note-content-dialog.component';\n\n@Component({\n  selector: 'app-notepage',\n  templateUrl: './notepage.component.html',\n  styleUrls: ['./notepage.component.css']\n})\nexport class NotepageComponent implements OnInit {\n \n  noteList : Notemodel\n  constructor(private configService :ConfigService,public dialog: MatDialog) { }\n\n  openDialog(note:Notemodel) { \n    const dialogRef = this.dialog.open(NoteContentDialogComponent,{data:note}); \n    dialogRef.afterClosed().subscribe(result => {\n      console.log(`Dialog result: ${result}`);\n      if(result[0]==\"delete\"){\n        this.configService.deleteNote(result[1]).subscribe(response => {\n          console.log(response);\n          this.getAllNotes();\n        })\n      }else if(result[0]==\"update\"){        \n          this.configService.updateNote(result[1])\n      }\n      else if(result[0]==\"new\"){        \n        console.log(result[1]);\n        this.configService.addNewNote(result[1]).subscribe(response => {\n          console.log(response);\n          this.getAllNotes();\n        })\n      }\n    });\n  }\n\n  menuDeleteNote(note:Notemodel){\n    this.configService.deleteNote(note).subscribe(response => {\n      console.log(response);\n      this.getAllNotes();\n    })\n  }\n\n  getAllNotes(){\n    this.configService.getAllNote().subscribe(data=>{\n      this.noteList=data\n     });\n  }\n  \n  ngOnInit(): void {    \n   this.getAllNotes();\n  } \n}\n \n","<mat-grid-list cols=\"5\"  rowHeight=\"1:1\" gutterSize=30px style=\"width: 80vw;\">\n\n  <mat-grid-tile  class=\"mat-elevation-z4\"  *ngFor=\"let notemodel of noteList\" >   \n    <div class=\"card-tile\" >\n      <div class=card-header> \n        <p class=header-title (click)=\"openDialog(notemodel)\">{{ notemodel.name }} </p>        \n        <button mat-icon-button  style=\"display:inline-block; float: right;\" [matMenuTriggerFor]=\"menu\"  >\n          <mat-icon>more_vert</mat-icon>\n        </button>  \n      </div>  \n      <div class=\"card-body\" (click)=\"openDialog(notemodel)\">{{ notemodel.body }}</div>\n    </div> \n  </mat-grid-tile>\n  \n  <mat-grid-tile class=\"matgrid-add-tile\" (click)=\"openDialog(null)\">\n    <div  class=\"add-tile\">\n      <mat-icon aria-hidden=\"false\" [inline]=\"true\">add_circle</mat-icon>\n    </div>\n  </mat-grid-tile>    \n\n</mat-grid-list>\n\n<mat-menu #menu=\"matMenu\">   \n  <button mat-menu-item >\n    <mat-icon>low_priority</mat-icon>\n    <span>Change Priority</span>\n  </button>\n\n  <button mat-menu-item > \n    <mat-icon>delete</mat-icon>\n    <span>Delete Note</span>\n  </button>\n</mat-menu>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}